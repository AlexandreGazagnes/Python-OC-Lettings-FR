name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Run tests with coverage
        run: poetry run pytest --cov=django_project --cov-report=html --cov-fail-under=80

      - name: Archive test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: reports/test-results.xml

      - name: Archive coverage report
        if: always()  # Collecter le rapport de couverture même si les tests réussissent
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      #- name: Deploy to server
      #  run: |
      #    ssh -o StrictHostKeyChecking=no user@server 'cd /path/to/project && docker-compose pull && docker-compose up -d'
